// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/test-bolt/pkg/utils"
	"time"
)

type EmailState string

const (
	EmailStateMissing    EmailState = "missing"
	EmailStateUnverified EmailState = "unverified"
	EmailStateVerified   EmailState = "verified"
)

func (e EmailState) ToPointer() *EmailState {
	return &e
}

func (e *EmailState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "missing":
		fallthrough
	case "unverified":
		fallthrough
	case "verified":
		*e = EmailState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EmailState: %v", v)
	}
}

type PhoneState string

const (
	PhoneStateMissing    PhoneState = "missing"
	PhoneStateUnverified PhoneState = "unverified"
	PhoneStateVerified   PhoneState = "verified"
)

func (e PhoneState) ToPointer() *PhoneState {
	return &e
}

func (e *PhoneState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "missing":
		fallthrough
	case "unverified":
		fallthrough
	case "verified":
		*e = PhoneState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneState: %v", v)
	}
}

type AccountTestCreationDataOutput struct {
	DeactivateAt time.Time  `json:"deactivate_at"`
	Email        string     `json:"email"`
	EmailState   EmailState `json:"email_state"`
	OauthCode    string     `json:"oauth_code"`
	OtpCode      string     `json:"otp_code"`
	Phone        string     `json:"phone"`
	PhoneState   PhoneState `json:"phone_state"`
}

func (a AccountTestCreationDataOutput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountTestCreationDataOutput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountTestCreationDataOutput) GetDeactivateAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.DeactivateAt
}

func (o *AccountTestCreationDataOutput) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *AccountTestCreationDataOutput) GetEmailState() EmailState {
	if o == nil {
		return EmailState("")
	}
	return o.EmailState
}

func (o *AccountTestCreationDataOutput) GetOauthCode() string {
	if o == nil {
		return ""
	}
	return o.OauthCode
}

func (o *AccountTestCreationDataOutput) GetOtpCode() string {
	if o == nil {
		return ""
	}
	return o.OtpCode
}

func (o *AccountTestCreationDataOutput) GetPhone() string {
	if o == nil {
		return ""
	}
	return o.Phone
}

func (o *AccountTestCreationDataOutput) GetPhoneState() PhoneState {
	if o == nil {
		return PhoneState("")
	}
	return o.PhoneState
}

type AccountTestCreationData struct {
	DeactivateAt time.Time  `json:"deactivate_at"`
	EmailState   EmailState `json:"email_state"`
	HasAddress   *bool      `json:"has_address,omitempty"`
	IsMigrated   *bool      `json:"is_migrated,omitempty"`
	PhoneState   PhoneState `json:"phone_state"`
}

func (a AccountTestCreationData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountTestCreationData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountTestCreationData) GetDeactivateAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.DeactivateAt
}

func (o *AccountTestCreationData) GetEmailState() EmailState {
	if o == nil {
		return EmailState("")
	}
	return o.EmailState
}

func (o *AccountTestCreationData) GetHasAddress() *bool {
	if o == nil {
		return nil
	}
	return o.HasAddress
}

func (o *AccountTestCreationData) GetIsMigrated() *bool {
	if o == nil {
		return nil
	}
	return o.IsMigrated
}

func (o *AccountTestCreationData) GetPhoneState() PhoneState {
	if o == nil {
		return PhoneState("")
	}
	return o.PhoneState
}
