// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AddressErrorInvalidPostalCodeTag - The type of error returned
type AddressErrorInvalidPostalCodeTag string

const (
	AddressErrorInvalidPostalCodeTagInvalidPostalCode AddressErrorInvalidPostalCodeTag = "invalid_postal_code"
)

func (e AddressErrorInvalidPostalCodeTag) ToPointer() *AddressErrorInvalidPostalCodeTag {
	return &e
}

func (e *AddressErrorInvalidPostalCodeTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_postal_code":
		*e = AddressErrorInvalidPostalCodeTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddressErrorInvalidPostalCodeTag: %v", v)
	}
}

type AddressErrorInvalidPostalCode struct {
	// The type of error returned
	DotTag AddressErrorInvalidPostalCodeTag `json:".tag"`
	// A human-readable error message, which might include information specific to
	// the request that was made.
	//
	Message string `json:"message"`
}

func (o *AddressErrorInvalidPostalCode) GetDotTag() AddressErrorInvalidPostalCodeTag {
	if o == nil {
		return AddressErrorInvalidPostalCodeTag("")
	}
	return o.DotTag
}

func (o *AddressErrorInvalidPostalCode) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}
