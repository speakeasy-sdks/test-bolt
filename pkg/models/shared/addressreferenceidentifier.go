// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AddressReferenceIdentifierTag - The type of address reference
type AddressReferenceIdentifierTag string

const (
	AddressReferenceIdentifierTagID AddressReferenceIdentifierTag = "id"
)

func (e AddressReferenceIdentifierTag) ToPointer() *AddressReferenceIdentifierTag {
	return &e
}

func (e *AddressReferenceIdentifierTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		*e = AddressReferenceIdentifierTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddressReferenceIdentifierTag: %v", v)
	}
}

type AddressReferenceIdentifier struct {
	// The type of address reference
	DotTag AddressReferenceIdentifierTag `json:".tag"`
	// The address's ID
	ID string `json:"id"`
}

func (o *AddressReferenceIdentifier) GetDotTag() AddressReferenceIdentifierTag {
	if o == nil {
		return AddressReferenceIdentifierTag("")
	}
	return o.DotTag
}

func (o *AddressReferenceIdentifier) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}
