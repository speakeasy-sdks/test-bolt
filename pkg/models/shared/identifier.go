// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// IdentifierType - The type of identifier
type IdentifierType string

const (
	IdentifierTypeEmail       IdentifierType = "email"
	IdentifierTypeEmailSha256 IdentifierType = "email_sha256"
)

func (e IdentifierType) ToPointer() *IdentifierType {
	return &e
}

func (e *IdentifierType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		fallthrough
	case "email_sha256":
		*e = IdentifierType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IdentifierType: %v", v)
	}
}

type Identifier struct {
	// The type of identifier
	IdentifierType IdentifierType `queryParam:"name=identifier_type"`
	// The value of the identifier. The value must be valid for the specified `identifier_type`
	IdentifierValue string `queryParam:"name=identifier_value"`
}

func (o *Identifier) GetIdentifierType() IdentifierType {
	if o == nil {
		return IdentifierType("")
	}
	return o.IdentifierType
}

func (o *Identifier) GetIdentifierValue() string {
	if o == nil {
		return ""
	}
	return o.IdentifierValue
}
