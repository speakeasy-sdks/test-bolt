// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PaymentMethodPaypalTag string

const (
	PaymentMethodPaypalTagPaypal PaymentMethodPaypalTag = "paypal"
)

func (e PaymentMethodPaypalTag) ToPointer() *PaymentMethodPaypalTag {
	return &e
}

func (e *PaymentMethodPaypalTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "paypal":
		*e = PaymentMethodPaypalTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentMethodPaypalTag: %v", v)
	}
}

type PaymentMethodPaypal struct {
	DotTag PaymentMethodPaypalTag `json:".tag"`
	// Redirect URL for canceled PayPal transaction.
	Cancel string `json:"cancel"`
	// Redirect URL for successful PayPal transaction.
	Success string `json:"success"`
}

func (o *PaymentMethodPaypal) GetDotTag() PaymentMethodPaypalTag {
	if o == nil {
		return PaymentMethodPaypalTag("")
	}
	return o.DotTag
}

func (o *PaymentMethodPaypal) GetCancel() string {
	if o == nil {
		return ""
	}
	return o.Cancel
}

func (o *PaymentMethodPaypal) GetSuccess() string {
	if o == nil {
		return ""
	}
	return o.Success
}
